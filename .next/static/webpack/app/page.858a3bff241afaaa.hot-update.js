"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/store/useChatStore.ts":
/*!***********************************!*\
  !*** ./src/store/useChatStore.ts ***!
  \***********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var zustand__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! zustand */ \"(app-pages-browser)/./node_modules/zustand/esm/index.mjs\");\n/* harmony import */ var zustand_middleware__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! zustand/middleware */ \"(app-pages-browser)/./node_modules/zustand/esm/middleware.mjs\");\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! uuid */ \"(app-pages-browser)/./node_modules/uuid/dist/esm-browser/v4.js\");\n/* harmony import */ var react_hot_toast__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react-hot-toast */ \"(app-pages-browser)/./node_modules/react-hot-toast/dist/index.mjs\");\n\n\n\n\nconst initialState = {\n    user: null,\n    chatrooms: [],\n    currentChatroom: null,\n    countries: [],\n    isLoading: false,\n    isDarkMode: false,\n    isTyping: false,\n    searchQuery: ''\n};\nconst useChatStore = (0,zustand__WEBPACK_IMPORTED_MODULE_1__.create)()((0,zustand_middleware__WEBPACK_IMPORTED_MODULE_2__.persist)((set, get)=>({\n        ...initialState,\n        login: (phoneNumber, countryCode)=>{\n            const user = {\n                id: (0,uuid__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(),\n                phoneNumber,\n                countryCode,\n                isAuthenticated: true\n            };\n            set({\n                user\n            });\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_0__[\"default\"].success('Successfully logged in!');\n        },\n        logout: ()=>{\n            set({\n                user: null,\n                currentChatroom: null\n            });\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_0__[\"default\"].success('Logged out successfully');\n        },\n        setCountries: (countries)=>{\n            set({\n                countries\n            });\n        },\n        createChatroom: (title)=>{\n            const newChatroom = {\n                id: (0,uuid__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(),\n                title,\n                messages: [],\n                createdAt: new Date(),\n                updatedAt: new Date()\n            };\n            set((state)=>({\n                    chatrooms: [\n                        newChatroom,\n                        ...state.chatrooms\n                    ],\n                    currentChatroom: newChatroom.id\n                }));\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_0__[\"default\"].success('Chatroom created successfully!');\n        },\n        deleteChatroom: (id)=>{\n            const chatroom = get().chatrooms.find((c)=>c.id === id);\n            if (!chatroom) return;\n            set((state)=>({\n                    chatrooms: state.chatrooms.filter((c)=>c.id !== id),\n                    currentChatroom: state.currentChatroom === id ? null : state.currentChatroom\n                }));\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_0__[\"default\"].success('\"'.concat(chatroom.title, '\" deleted'));\n        },\n        setCurrentChatroom: (id)=>{\n            set({\n                currentChatroom: id\n            });\n        },\n        addMessage: (chatroomId, content, image)=>{\n            const message = {\n                id: (0,uuid__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(),\n                content,\n                sender: 'user',\n                timestamp: new Date(),\n                image\n            };\n            set((state)=>({\n                    chatrooms: state.chatrooms.map((chatroom)=>chatroom.id === chatroomId ? {\n                            ...chatroom,\n                            messages: [\n                                ...chatroom.messages,\n                                message\n                            ],\n                            lastMessage: message,\n                            updatedAt: new Date()\n                        } : chatroom)\n                }));\n            setTimeout(()=>{\n                get().simulateAIResponse(chatroomId);\n            }, 1500 + Math.random() * 2000);\n        },\n        simulateAIResponse: (chatroomId)=>{\n            const responses = [\n                \"I understand your question. Let me help you with that.\",\n                \"That's an interesting point. Here's what I think about it.\",\n                \"I can help you explore this topic further. What specific aspect interests you most?\",\n                \"Based on what you've shared, here are some thoughts:\",\n                \"That's a great question! Let me break this down for you.\",\n                \"I see what you're getting at. Here's my perspective:\",\n                \"Thanks for sharing that. Here's what I can offer:\",\n                \"That's worth considering. From my understanding:\"\n            ];\n            const aiMessage = {\n                id: (0,uuid__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(),\n                content: responses[Math.floor(Math.random() * responses.length)],\n                sender: 'ai',\n                timestamp: new Date()\n            };\n            set((state)=>({\n                    chatrooms: state.chatrooms.map((chatroom)=>chatroom.id === chatroomId ? {\n                            ...chatroom,\n                            messages: [\n                                ...chatroom.messages,\n                                aiMessage\n                            ],\n                            lastMessage: aiMessage,\n                            updatedAt: new Date()\n                        } : chatroom),\n                    isTyping: false\n                }));\n        },\n        setIsLoading: (loading)=>{\n            set({\n                isLoading: loading\n            });\n        },\n        setIsDarkMode: (isDark)=>{\n            set({\n                isDarkMode: isDark\n            });\n            if (true) {\n                if (isDark) {\n                    document.documentElement.classList.add('dark');\n                } else {\n                    document.documentElement.classList.remove('dark');\n                }\n            }\n        },\n        setIsTyping: (typing)=>{\n            set({\n                isTyping: typing\n            });\n        },\n        setSearchQuery: (query)=>{\n            set({\n                searchQuery: query\n            });\n        },\n        initializeApp: ()=>{\n            if (false) {}\n            // Initialize dark mode based on system preference\n            const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\n            const stored = localStorage.getItem('chat-store');\n            if (!stored) {\n                get().setIsDarkMode(prefersDark);\n            } else {\n                var _parsedStore_state;\n                const parsedStore = JSON.parse(stored);\n                if ((_parsedStore_state = parsedStore.state) === null || _parsedStore_state === void 0 ? void 0 : _parsedStore_state.isDarkMode) {\n                    document.documentElement.classList.add('dark');\n                }\n            }\n        }\n    }), {\n    name: 'chat-store',\n    partialize: (state)=>({\n            user: state.user,\n            chatrooms: state.chatrooms,\n            isDarkMode: state.isDarkMode\n        })\n}));\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (useChatStore);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/store/useChatStore.ts\n"));

/***/ })

});